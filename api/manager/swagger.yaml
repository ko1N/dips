basePath: /
definitions:
  manager.FailureResponse:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  manager.JobInfoResponse:
    properties:
      job:
        $ref: '#/definitions/model.Job'
        type: object
    type: object
  manager.JobListResponse:
    properties:
      jobs:
        items:
          $ref: '#/definitions/model.Job'
        type: array
    type: object
  manager.SuccessResponse:
    properties:
      status:
        type: string
    type: object
  model.Job:
    properties:
      createdAt:
        type: string
      id:
        type: string
      logs:
        items:
          type: string
        type: array
      pipeline:
        type: string
      progress:
        type: integer
      stages:
        items:
          $ref: '#/definitions/model.JobStage'
        type: array
      updatedAt:
        type: string
    type: object
  model.JobStage:
    properties:
      name:
        type: string
      progress:
        type: integer
      tasks:
        items:
          $ref: '#/definitions/model.JobStageTask'
        type: array
    type: object
  model.JobStageTask:
    properties:
      id:
        type: integer
      name:
        type: string
      progress:
        type: integer
      stderr:
        items:
          type: string
        type: array
      stdout:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: dips manager api
  license: {}
  title: dips
  version: "0.1"
paths:
  /manager/job/execute:
    post:
      consumes:
      - text/plain
      description: This method will execute the job sent via the post body
      operationId: execute-job
      parameters:
      - description: Pipeline Script
        in: body
        name: pipeline
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: executes a job
      tags:
      - jobs
  /manager/job/info/{job_id}:
    get:
      description: This method will return a single job by it's id or an error.
      operationId: job-info
      parameters:
      - description: Job ID
        in: path
        name: job_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.JobInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: find a single job by it's id
      tags:
      - jobs
  /manager/job/list:
    get:
      description: This method will return a list of all jobs
      operationId: job-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.JobListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: lists all jobs
      tags:
      - jobs
swagger: "2.0"
