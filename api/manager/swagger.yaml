basePath: /
definitions:
  manager.FailureResponse:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  manager.JobDetailsResponse:
    properties:
      job:
        $ref: '#/definitions/model.Job'
      messages:
        items:
          $ref: '#/definitions/messages.Message'
        type: array
    type: object
  manager.JobListResponse:
    properties:
      jobs:
        items:
          $ref: '#/definitions/model.Job'
        type: array
    type: object
  manager.PipelineCreateResponse:
    properties:
      pipeline:
        $ref: '#/definitions/model.Pipeline'
      status:
        type: string
    type: object
  manager.PipelineDetailsResponse:
    properties:
      pipeline:
        $ref: '#/definitions/model.Pipeline'
    type: object
  manager.PipelineExecuteRequest:
    properties:
      name:
        type: string
      parameters:
        additionalProperties: true
        type: object
    type: object
  manager.PipelineExecuteResponse:
    properties:
      job:
        $ref: '#/definitions/model.Job'
    type: object
  manager.PipelineListResponse:
    properties:
      pipelines:
        items:
          $ref: '#/definitions/model.Pipeline'
        type: array
    type: object
  manager.SuccessResponse:
    properties:
      status:
        type: string
    type: object
  messages.Message:
    properties:
      message:
        type: string
      type:
        type: integer
    type: object
  model.Job:
    properties:
      id:
        type: string
      name:
        type: string
      pipeline:
        $ref: '#/definitions/model.Pipeline'
      variables:
        additionalProperties: true
        type: object
    type: object
  model.Pipeline:
    properties:
      id:
        type: string
      name:
        type: string
      pipeline:
        $ref: '#/definitions/pipeline.Pipeline'
      revision:
        type: integer
      script:
        type: string
    type: object
  pipeline.Expression:
    properties:
      script:
        type: string
    type: object
  pipeline.Pipeline:
    properties:
      name:
        type: string
      parameters:
        items:
          type: string
        type: array
      stages:
        items:
          $ref: '#/definitions/pipeline.Stage'
        type: array
    type: object
  pipeline.Stage:
    properties:
      name:
        type: string
      tasks:
        items:
          $ref: '#/definitions/pipeline.Task'
        type: array
    type: object
  pipeline.Task:
    properties:
      ignore_errors:
        type: boolean
      input:
        additionalProperties: true
        type: object
      name:
        type: string
      notify:
        description: NotifyRef
        items:
          type: string
        type: array
      register:
        type: string
      service:
        type: string
      when:
        $ref: '#/definitions/pipeline.Expression'
    type: object
info:
  contact: {}
  description: dips manager api
  title: dips
  version: "0.1"
paths:
  /manager/job/all:
    get:
      description: This method will return a list of all jobs
      operationId: job-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.JobListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: lists all jobs
      tags:
      - jobs
  /manager/job/details/{job_id}:
    get:
      description: This method will return a single job by it's id or an error.
      operationId: job-details
      parameters:
      - description: Job ID
        in: path
        name: job_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.JobDetailsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: find a single job by it's id and shows all fields
      tags:
      - jobs
  /manager/pipeline/:
    post:
      consumes:
      - text/plain
      description: This method will create the pipeline sent via the post body
      operationId: pipeline-create
      parameters:
      - description: Pipeline Script
        in: body
        name: pipeline
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.PipelineCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: creates a pipeline
      tags:
      - pipelines
  /manager/pipeline/{pipeline_id}:
    delete:
      description: This method will delete the given pipeline
      operationId: pipeline-delete
      parameters:
      - description: Pipeline ID
        in: path
        name: pipeline_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: deletes the pipeline with the given id
      tags:
      - pipelines
    patch:
      consumes:
      - text/plain
      description: This method will update the given pipeline from a provided script
      operationId: pipeline-update
      parameters:
      - description: Pipeline ID
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Pipeline Script
        in: body
        name: pipeline
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.PipelineDetailsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: updates the pipeline with the given id
      tags:
      - pipelines
  /manager/pipeline/all:
    get:
      description: This method will return a list of all registered pipelines
      operationId: pipeline-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.PipelineListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: lists all registered pipelines
      tags:
      - pipelines
  /manager/pipeline/details/{pipeline_id}:
    get:
      description: This method will return a single pipeline by it's id or an error.
      operationId: pipeline-details
      parameters:
      - description: Pipeline ID
        in: path
        name: pipeline_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.PipelineDetailsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: find a pipeline by it's id and shows all fields
      tags:
      - pipelines
  /manager/pipeline/execute/{pipeline_id}:
    post:
      consumes:
      - application/json
      description: This method will execute the pipeline with the given id
      operationId: pipeline-execute
      parameters:
      - description: Pipeline ID
        in: path
        name: pipeline_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: execute_request
        required: true
        schema:
          $ref: '#/definitions/manager.PipelineExecuteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.PipelineExecuteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/manager.FailureResponse'
      summary: executes a pipeline
      tags:
      - pipelines
swagger: "2.0"
